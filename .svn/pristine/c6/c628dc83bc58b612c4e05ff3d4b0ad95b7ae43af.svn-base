package com.cyberway.weixin.business.attendance.controller;

import java.io.IOException;
import java.io.PrintWriter;

import com.cyberway.core.dao.EntityDao;
import com.cyberway.core.web.BaseBizController;
import com.cyberway.weixin.business.attendance.domain.Attendance;
import com.cyberway.weixin.business.attendance.service.AttendanceService;
import com.cyberway.weixin.encrypt.AesException;
import com.cyberway.weixin.encrypt.WXBizMsgCrypt;
import com.cyberway.weixin.util.Constants;
/**
 * 
 * @com.cyberway.weixin.business.attendance.controller.AttendanceController
 * TODO :微信考勤控制器
 * @author yanruqian
 * @version 1.0.0
 * @createDate：2015年2月16日 下午1:58:26
 */
public class AttendanceController extends BaseBizController<Attendance>{
	
	/**  
	* serialVersionUID:TODO（用一句话描述这个变量表示什么）
	*/  
	private static final long serialVersionUID = 1L;
	
	AttendanceService service = (AttendanceService) this.getServiceById("attendanceService");

	@Override
	protected EntityDao getService() {
		// TODO Auto-generated method stub 未完成 by yanruqian 2015年2月16日
		return service;
	}
	/**
	 * 
	*  <p>TODO 回调地址</p>
	 * @return http://120.197.42.141:8084/weixin/attendance!index.action
	 * @throws IOException
	 */
	public String doIndex() throws IOException{
		// 微信加密签名  
        String msg_signature = getRequest().getParameter("msg_signature");  
        // 时间戳  
        String timestamp = getRequest().getParameter("timestamp");  
        // 随机数  
        String nonce = getRequest().getParameter("nonce");  
        // 随机字符串  
        String echostr = getRequest().getParameter("echostr");  
        // 打印请求地址
        System.out.println("request=" + getRequest().getRequestURL());  
        // 通过检验signature对请求进行校验，若校验成功则原样返回echostr，表示接入成功，否则接入失败  
        String result = null;  
        try {  
        	WXBizMsgCrypt wxcpt = new WXBizMsgCrypt(Constants.TOKEN,Constants.encodingAESKey,Constants.CORPID);  
        	// 验证URL函数
        	result = wxcpt.VerifyURL(msg_signature, timestamp, nonce, echostr);  
        } catch (AesException e) {  
            e.printStackTrace();  
        }  
        outWrite(result);
		return null;
	}
}
